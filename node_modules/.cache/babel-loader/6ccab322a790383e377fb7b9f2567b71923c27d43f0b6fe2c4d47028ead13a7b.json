{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\travel-agency\\\\src\\\\components\\\\Header.js\",\n  _s = $RefreshSig$();\nimport { Link } from \"react-router-dom\";\nimport logoJpg from \"../logo.jpg\";\nimport { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst linksList = [{\n  id: 1,\n  text: \"Home\",\n  url: \"/\"\n}, {\n  id: 2,\n  text: \"About\",\n  url: \"/about\"\n}, {\n  id: 3,\n  text: \"Tours\",\n  url: \"/tours\"\n}, {\n  id: 4,\n  text: \"Services\",\n  url: \"/services\"\n}, {\n  id: 5,\n  text: \"Blog\",\n  url: \"/blog\"\n}, {\n  id: 6,\n  text: \"Contact\",\n  url: \"/contact\"\n}];\nfunction Header({\n  activeLink,\n  setActiveLink\n}) {\n  _s();\n  window.onload = () => {\n    if (window.location.pathname !== \"/\") {\n      window.location.reload();\n      window.location.href = \"/\";\n      setActiveLink(\"Home\");\n    }\n  };\n  useEffect(() => {\n    // Get the last part of the path as the active link (e.g., \"/about\" -> \"About\")\n    const currentPath = location.pathname;\n    const link = currentPath === \"/\" ? \"Home\" : currentPath.slice(1).charAt(0).toUpperCase() + currentPath.slice(2);\n    setActiveLink(link);\n  }, [location]);\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"header\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"logo\",\n          src: logoJpg,\n          alt: \"Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-menu\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"links-list\",\n        children: linksList.map(link => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: link.url,\n            className: activeLink === link.text ? \"active\" : \"\",\n            onClick: () => setActiveLink(link.text),\n            children: link.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)\n        }, link.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(Header, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Header;\nexport default Header;\n/***************/\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["Link","logoJpg","useState","useEffect","useLocation","jsxDEV","_jsxDEV","linksList","id","text","url","Header","activeLink","setActiveLink","_s","window","onload","location","pathname","reload","href","currentPath","link","slice","charAt","toUpperCase","className","children","to","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/travel-agency/src/components/Header.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport logoJpg from \"../logo.jpg\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst linksList = [\r\n  { id: 1, text: \"Home\", url: \"/\" },\r\n  { id: 2, text: \"About\", url: \"/about\" },\r\n  { id: 3, text: \"Tours\", url: \"/tours\" },\r\n  { id: 4, text: \"Services\", url: \"/services\" },\r\n  { id: 5, text: \"Blog\", url: \"/blog\" },\r\n  { id: 6, text: \"Contact\", url: \"/contact\" },\r\n];\r\n\r\nfunction Header({ activeLink, setActiveLink }) {\r\n  window.onload = () => {\r\n    if (window.location.pathname !== \"/\") {\r\n      window.location.reload();\r\n      window.location.href = \"/\";\r\n      setActiveLink(\"Home\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Get the last part of the path as the active link (e.g., \"/about\" -> \"About\")\r\n    const currentPath = location.pathname;\r\n    const link =\r\n      currentPath === \"/\"\r\n        ? \"Home\"\r\n        : currentPath.slice(1).charAt(0).toUpperCase() + currentPath.slice(2);\r\n    setActiveLink(link);\r\n  }, [location]);\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <div>\r\n        <Link to=\"/\">\r\n          <img className=\"logo\" src={logoJpg} alt=\"Logo\" />\r\n        </Link>\r\n      </div>\r\n\r\n      <div className=\"main-menu\">\r\n        <ul className=\"links-list\">\r\n          {linksList.map((link) => (\r\n            <li key={link.id}>\r\n              <Link\r\n                to={link.url}\r\n                className={activeLink === link.text ? \"active\" : \"\"}\r\n                onClick={() => setActiveLink(link.text)}\r\n              >\r\n                {link.text}\r\n              </Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n/***************/\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}